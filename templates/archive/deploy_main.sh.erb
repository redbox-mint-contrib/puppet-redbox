#!/bin/bash

## if not running from puppet, use:
## sudo -Hu redbox deploy.sh 

exit_deploy() {
	if [ $# -gt 0 ]; then
		echo "ERROR: $@." >&2
	fi
	echo "ERROR: Deploy incomplete." >&2
	exit 1
}

function is_timestamp_current() {
	is_current=1
	source=$1
	redbox_system=$2
	old_file_timestamp=<%= @working_directory %>/${redbox_system}.<%= @old_extension %>
	new_file_timestamp=<%= @working_directory %>/${redbox_system}.<%= @new_extension %>
	
	echo "Getting latest timestamp..."
	curl -Ss -# --location --head --url "${source}" | awk -F': ' '/Last-Modified: / {print $2}' >${new_file_timestamp}
	
	if [ -f ${old_file_timestamp} ]; then
		echo "Comparing ${old_file_timestamp} and ${new_file_timestamp}..."
		TS_OLD=`cat ${old_file_timestamp}`
	    TS_NEW=`cat ${new_file_timestamp}`
	    
	    echo "Old timestamp is: $TS_OLD"
	    echo "New timestamp is: $TS_NEW"
	    
	    is_current=$([ "$TS_OLD" = "$TS_NEW" ])
	fi
	return ${is_current}
}

grab_and_unpack_latest_archive() {
	source=$1
	redbox_system=$2
	deployed_archive=<%= @deploy_parent_directory %>/${redbox_system}/${redbox_system}.<%= @archive_extension %>
	install_directory=<%= @install_parent_directory %>/${redbox_system}

	echo "Downloading ${redbox_system}..."
	wget -nv "${source}" -O ${deployed_archive}
	echo "Unpacking: ${deployed_archive}"
	tar -xzf ${deployed_archive} -C <%= @deploy_parent_directory %>
	rm -f ${deployed_archive}
}

update_server_url_in_startup_script() {
	server_file_base="<%= @deploy_parent_directory %>/${redbox_system}/server/tf_env"
	
	echo "Getting correct server url..."
	
	<% if @has_ssl-%>
		protocol=https
	<%- else -%>
		protocol=http
	<%- end %>
	
	server_url=<%= @server_url %>
	if [ $# -gt 1 ]; then
		echo "Including relative web context..."
		server_url="${server_url}\/$2"
	fi
	regex="s/SERVER_URL=.*/SERVER_URL=\"${protocol}:\/\/${server_url}\/\"/g"
	echo "Fixing the incorrect url: $regex"
	echo "Applying regex to script: ${server_file_base}.sh"
	sed "$regex" ${server_file_base}.sh > ${server_file_base}.new

	mv ${server_file_base}.new ${server_file_base}.sh
}

stop_server() {
	server_script="<%= @install_parent_directory %>/$1/server/tf.sh"
	if [ -f ${server_script} ]; then
		echo "Stopping ${server_script}"
	    ${server_script} stop;
	fi
}

install_deployed_files() {
	redbox_system=$1
	
	libs_directory=<%= @install_parent_directory%>/${redbox_system}/server/lib
	echo "Removing old server libraries: ${libs_directory}"
	if [ -d ${libs_directory} ]; then
	    rm -rf ${libs_directory}
	fi
	
	plugins_directory=<%= @install_parent_directory%>/${redbox_system}/server/plugins
	echo "Removing old plugins: ${plugins_directory}"
	if [ -d ${plugins_directory} ]; then
	    rm -rf ${plugins_directory}
	fi
	
	echo "Copying deployed files across to installation:"
	echo "...from <%= @deploy_parent_directory%>/${redbox_system} to <%= @install_parent_directory%>/${redbox_system}"
	cp -rf <%= @deploy_parent_directory %>/${redbox_system}/* <%= @install_parent_directory%>/${redbox_system}
	
	echo "Cleaning up..."
	echo "...removing deploy artifacts..."
	rm -rf <%= @deploy_parent_directory %>/${redbox_system}/*
}

prime() {
	echo "Sleep...then prime mint."
	server_url=<%= @server_url %>
	if [ $# -gt 0 ]; then
		server_url="${server_url}/$1"
	fi
	echo "Including relative web context, which is now ${server_url}"
	
	sleep 20
	echo "Priming..."
	## TODO : if not exposed through proxy, server_url should be localhost:9001/mint instead.
	wget --wait=10 --tries=2 --spider -O /dev/null "${server_url}"

}

########################## Main ##########################
deploy() {
	redbox_system=$1	
	source=$2
	web_context=''
	if [ $# -gt 2 ]; then
		web_context=$3
	fi

	echo "Deploying ${redbox_system}..."
	
	if is_timestamp_current ${source} ${redbox_system}; then
		echo "Timestamp is current. No deploy required."
	else
		grab_and_unpack_latest_archive ${source} ${redbox_system} || exit_deploy
		update_server_url_in_startup_script ${redbox_system} ${web_context} || exit_deploy
		stop_server ${redbox_system} || exit_deploy
		install_deployed_files ${redbox_system} || exit_deploy
		echo "Successfully deployed ${redbox_system}"
	fi
	echo "Updating old timestamp..."
	mv -f <%= @working_directory %>/${redbox_system}.<%= @new_extension %> <%= @working_directory %>/${redbox_system}.<%= @old_extension %>
	echo "Restarting: <%= @install_parent_directory%>/${redbox_system}/server/tf.sh"
	<%= @install_parent_directory%>/${redbox_system}/server/tf.sh restart || exit_deploy
	prime ${web_context} || exit_deploy
}
if [ `whoami` != "<%= @owner %>" ]; then
	exit_deploy "Usage: sudo -Hu <%= @owner %> <%= @working_directory %>/$(basename $0)"
fi
